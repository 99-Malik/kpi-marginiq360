'use client';

import * as React from 'react';

type SvgProps = React.SVGProps<SVGSVGElement> & {
  /** Optional active flag for dynamic coloring */
  isActive?: boolean;
};

export const InformationIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    const fillColor = isActive ? '#5a0894' : '#727A90';
  
    return (
      <svg
        width="14"
        height="14"
        viewBox="0 0 14 14"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <g clipPath="url(#clip0_2249_43911)">
          <path
            d="M7 14C8.38447 14 9.73785 13.5895 10.889 12.8203C12.0401 12.0511 12.9373 10.9579 13.4672 9.67879C13.997 8.3997 14.1356 6.99224 13.8655 5.63437C13.5954 4.2765 12.9287 3.02922 11.9497 2.05026C10.9708 1.07129 9.7235 0.404603 8.36563 0.134506C7.00777 -0.13559 5.6003 0.003033 4.32122 0.532846C3.04213 1.06266 1.94888 1.95987 1.17971 3.11101C0.410543 4.26216 0 5.61553 0 7C0.0020073 8.8559 0.74015 10.6352 2.05247 11.9475C3.36479 13.2599 5.1441 13.998 7 14ZM7 2.91667C7.17306 2.91667 7.34223 2.96799 7.48612 3.06413C7.63002 3.16028 7.74217 3.29694 7.8084 3.45682C7.87462 3.61671 7.89195 3.79264 7.85819 3.96237C7.82443 4.13211 7.74109 4.28802 7.61872 4.41039C7.49635 4.53276 7.34044 4.61609 7.1707 4.64986C7.00097 4.68362 6.82504 4.66629 6.66515 4.60006C6.50527 4.53384 6.36861 4.42169 6.27246 4.27779C6.17632 4.1339 6.125 3.96473 6.125 3.79167C6.125 3.55961 6.21719 3.33705 6.38128 3.17295C6.54538 3.00886 6.76794 2.91667 7 2.91667ZM6.41667 5.83334H7C7.30942 5.83334 7.60617 5.95625 7.82496 6.17505C8.04375 6.39384 8.16667 6.69058 8.16667 7V10.5C8.16667 10.6547 8.10521 10.8031 7.99581 10.9125C7.88642 11.0219 7.73804 11.0833 7.58333 11.0833C7.42862 11.0833 7.28025 11.0219 7.17086 10.9125C7.06146 10.8031 7 10.6547 7 10.5V7H6.41667C6.26196 7 6.11358 6.93854 6.00419 6.82915C5.89479 6.71975 5.83333 6.57138 5.83333 6.41667C5.83333 6.26196 5.89479 6.11359 6.00419 6.00419C6.11358 5.89479 6.26196 5.83334 6.41667 5.83334Z"
            fill={fillColor}
          />
        </g>
        <defs>
          <clipPath id="clip0_2249_43911">
            <rect width="14" height="14" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  };
export const ClockIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    const fillColor = isActive ? '#6E0AB8' : '#727A90';
  
    return (
      <svg
        width="14"
        height="14"
        viewBox="0 0 14 14"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <g clipPath="url(#clip0_2249_43914)">
          <path
            d="M7 0C5.61553 0 4.26216 0.410543 3.11101 1.17971C1.95987 1.94888 1.06266 3.04213 0.532846 4.32122C0.003033 5.6003 -0.13559 7.00777 0.134506 8.36563C0.404603 9.7235 1.07129 10.9708 2.05026 11.9497C3.02922 12.9287 4.2765 13.5954 5.63437 13.8655C6.99224 14.1356 8.3997 13.997 9.67879 13.4672C10.9579 12.9373 12.0511 12.0401 12.8203 10.889C13.5895 9.73785 14 8.38447 14 7C13.998 5.1441 13.2599 3.36479 11.9475 2.05247C10.6352 0.74015 8.8559 0.0020073 7 0V0ZM7.58334 6.92942C7.5834 7.0283 7.55832 7.12557 7.51047 7.2121C7.46261 7.29863 7.39354 7.37158 7.30975 7.42408L5.06975 8.82408C5.00464 8.86476 4.93215 8.89221 4.85643 8.90488C4.7807 8.91754 4.70323 8.91516 4.62842 8.89788C4.55362 8.8806 4.48295 8.84876 4.42045 8.80417C4.35795 8.75958 4.30485 8.70311 4.26417 8.638C4.22349 8.57289 4.19604 8.5004 4.18338 8.42467C4.17071 8.34895 4.17309 8.27147 4.19037 8.19667C4.20765 8.12186 4.23949 8.0512 4.28408 7.9887C4.32867 7.9262 4.38514 7.87309 4.45025 7.83242L6.41667 6.60625V4.08333C6.41667 3.92862 6.47813 3.78025 6.58752 3.67085C6.69692 3.56146 6.84529 3.5 7 3.5C7.15471 3.5 7.30309 3.56146 7.41248 3.67085C7.52188 3.78025 7.58334 3.92862 7.58334 4.08333V6.92942Z"
            fill={fillColor}
          />
        </g>
        <defs>
          <clipPath id="clip0_2249_43914">
            <rect width="14" height="14" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  };

  export const NotificationLogoIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    const fillColor = isActive ? '#5a0894' : '#6E0AB8';
  
    return (
      <svg
        width="22"
        height="22"
        viewBox="0 0 22 22"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <path
          d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"
          fill={fillColor}
          stroke="white"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M11 17C14.3137 17 17 14.3137 17 11C17 7.68629 14.3137 5 11 5C7.68629 5 5 7.68629 5 11C5 14.3137 7.68629 17 11 17Z"
          stroke="white"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M11 13C12.1046 13 13 12.1046 13 11C13 9.89543 12.1046 9 11 9C9.89543 9 9 9.89543 9 11C9 12.1046 9.89543 13 11 13Z"
          stroke="white"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  };
  export const TickMarkIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    // Optional: Change color when active
    const fillColor = isActive ? '#5a0894' : '#6E0AB8';
  
    return (
      <svg
        width="14"
        height="14"
        viewBox="0 0 14 14"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <g clipPath="url(#clip0_2843_14685)">
          <path
            d="M13.0194 2.58475L4.95828 10.6453C4.90408 10.6997 4.83968 10.7428 4.76875 10.7723C4.69783 10.8018 4.62179 10.8169 4.54499 10.8169C4.46819 10.8169 4.39215 10.8018 4.32123 10.7723C4.2503 10.7428 4.1859 10.6997 4.1317 10.6453L1.01437 7.525C0.960168 7.47059 0.89576 7.42742 0.824837 7.39796C0.753914 7.3685 0.677872 7.35334 0.601074 7.35334C0.524276 7.35334 0.448233 7.3685 0.37731 7.39796C0.306387 7.42742 0.241979 7.47059 0.187782 7.525C0.133371 7.5792 0.0901966 7.64361 0.0607373 7.71453C0.031278 7.78546 0.0161133 7.8615 0.0161133 7.9383C0.0161133 8.01509 0.031278 8.09114 0.0607373 8.16206C0.0901966 8.23298 0.133371 8.29739 0.187782 8.35159L3.30628 11.4695C3.63525 11.7979 4.08106 11.9823 4.54587 11.9823C5.01067 11.9823 5.45648 11.7979 5.78545 11.4695L13.8459 3.41075C13.9003 3.35657 13.9434 3.2922 13.9728 3.22133C14.0022 3.15046 14.0173 3.07448 14.0173 2.99775C14.0173 2.92103 14.0022 2.84505 13.9728 2.77418C13.9434 2.70331 13.9003 2.63894 13.8459 2.58475C13.7918 2.53034 13.7273 2.48717 13.6564 2.45771C13.5855 2.42825 13.5095 2.41309 13.4327 2.41309C13.3559 2.41309 13.2798 2.42825 13.2089 2.45771C13.138 2.48717 13.0736 2.53034 13.0194 2.58475Z"
            fill={fillColor}
          />
        </g>
        <defs>
          <clipPath id="clip0_2843_14685">
            <rect width="14" height="14" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  };


  export const AllReadIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    // Optional active color toggle
    const fillColor = isActive ? '#5a0894' : '#6E0AB8';
  
    return (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <g clipPath="url(#clip0_2843_6763)">
          <path
            d="M5.3333 6.50007C5.10332 6.50068 4.87551 6.45567 4.66304 6.36766C4.45057 6.27964 4.25766 6.15037 4.09547 5.98732L3.1948 5.18582C3.07923 5.08279 3.00933 4.93806 3.00047 4.78348C2.99161 4.62891 3.04452 4.47714 3.14755 4.36157C3.25059 4.246 3.39531 4.1761 3.54989 4.16724C3.70447 4.15838 3.85623 4.21129 3.9718 4.31432L4.89639 5.13916C4.94931 5.1986 5.01385 5.24657 5.08601 5.28014C5.15818 5.31371 5.23645 5.33215 5.31601 5.33434C5.39557 5.33652 5.47474 5.3224 5.54864 5.29285C5.62254 5.2633 5.68961 5.21893 5.74572 5.16249L7.84805 3.16107C7.9611 3.06043 8.10884 3.00767 8.26006 3.01393C8.41129 3.02019 8.55416 3.08498 8.6585 3.19462C8.76284 3.30426 8.82048 3.45017 8.81925 3.60152C8.81801 3.75287 8.758 3.89781 8.65189 4.00574L6.5583 5.99724C6.39717 6.15743 6.20604 6.2843 5.99585 6.37058C5.78565 6.45686 5.56051 6.50086 5.3333 6.50007ZM17 5.33341C17 5.1787 16.9385 5.03032 16.8291 4.92093C16.7197 4.81153 16.5713 4.75007 16.4166 4.75007H10.5833C10.4286 4.75007 10.2802 4.81153 10.1708 4.92093C10.0614 5.03032 9.99997 5.1787 9.99997 5.33341C9.99997 5.48812 10.0614 5.63649 10.1708 5.74589C10.2802 5.85528 10.4286 5.91674 10.5833 5.91674H16.4166C16.5713 5.91674 16.7197 5.85528 16.8291 5.74589C16.9385 5.63649 17 5.48812 17 5.33341ZM6.5583 10.6639L8.65189 8.67241C8.71032 8.62038 8.75769 8.55714 8.79118 8.48644C8.82467 8.41573 8.8436 8.33901 8.84684 8.26085C8.85007 8.18268 8.83755 8.10466 8.81002 8.03143C8.78249 7.9582 8.7405 7.89125 8.68657 7.83458C8.63264 7.7779 8.56785 7.73266 8.49608 7.70153C8.4243 7.67041 8.34699 7.65404 8.26876 7.6534C8.19053 7.65277 8.11297 7.66787 8.04069 7.69782C7.96842 7.72777 7.9029 7.77195 7.84805 7.82774L5.74805 9.82916C5.637 9.93534 5.48928 9.9946 5.33564 9.9946C5.18199 9.9946 5.03427 9.93534 4.92322 9.82916L3.99572 8.90457C3.8857 8.79831 3.73835 8.73952 3.5854 8.74085C3.43245 8.74218 3.28615 8.80352 3.17799 8.91168C3.06984 9.01983 3.00849 9.16614 3.00716 9.31909C3.00583 9.47204 3.06463 9.61939 3.17089 9.72941L4.09547 10.654C4.42194 10.9805 4.86425 11.1648 5.32601 11.1667C5.78777 11.1685 6.23154 10.9878 6.56064 10.6639H6.5583ZM17 10.0001C17 9.84536 16.9385 9.69699 16.8291 9.58759C16.7197 9.4782 16.5713 9.41674 16.4166 9.41674H10.5833C10.4286 9.41674 10.2802 9.4782 10.1708 9.58759C10.0614 9.69699 9.99997 9.84536 9.99997 10.0001C9.99997 10.1548 10.0614 10.3032 10.1708 10.4126C10.2802 10.5219 10.4286 10.5834 10.5833 10.5834H16.4166C16.5713 10.5834 16.7197 10.5219 16.8291 10.4126C16.9385 10.3032 17 10.1548 17 10.0001ZM6.5583 15.3306L8.64955 13.3391C8.70799 13.2871 8.75536 13.2238 8.78885 13.1531C8.82234 13.0824 8.84127 13.0057 8.8445 12.9275C8.84774 12.8493 8.83522 12.7713 8.80769 12.6981C8.78015 12.6249 8.73817 12.5579 8.68424 12.5012C8.6303 12.4446 8.56552 12.3993 8.49374 12.3682C8.42197 12.3371 8.34466 12.3207 8.26643 12.3201C8.18819 12.3194 8.11063 12.3345 8.03836 12.3645C7.96608 12.3944 7.90057 12.4386 7.84572 12.4944L5.74572 14.4958C5.68961 14.5523 5.62254 14.5966 5.54864 14.6262C5.47474 14.6557 5.39557 14.6699 5.31601 14.6677C5.23645 14.6655 5.15818 14.647 5.08601 14.6135C5.01385 14.5799 4.94931 14.5319 4.89639 14.4725L3.9718 13.6477C3.85623 13.5446 3.70447 13.4917 3.54989 13.5006C3.39531 13.5094 3.25059 13.5793 3.14755 13.6949C3.04452 13.8105 2.99161 13.9622 3.00047 14.1168C3.00933 14.2714 3.07923 14.4161 3.1948 14.5192L4.09547 15.3207C4.42194 15.6472 4.86425 15.8315 5.32601 15.8333C5.78777 15.8352 6.23154 15.6545 6.56064 15.3306H6.5583ZM17 14.6667C17 14.512 16.9385 14.3637 16.8291 14.2543C16.7197 14.1449 16.5713 14.0834 16.4166 14.0834H10.5833C10.4286 14.0834 10.2802 14.1449 10.1708 14.2543C10.0614 14.3637 9.99997 14.512 9.99997 14.6667C9.99997 14.8215 10.0614 14.9698 10.1708 15.0792C10.2802 15.1886 10.4286 15.2501 10.5833 15.2501H16.4166C16.5713 15.2501 16.7197 15.1886 16.8291 15.0792C16.9385 14.9698 17 14.8215 17 14.6667Z"
            fill={fillColor}
          />
        </g>
        <defs>
          <clipPath id="clip0_2843_6763">
            <rect width="14" height="14" fill="white" transform="translate(3 3)" />
          </clipPath>
        </defs>
      </svg>
    );
  };

  export const ArrowIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    const fillColor = isActive ? '#5a0894' : '#6E0AB8';
  
    return (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <path
          d="M16.4867 8.78077L14.2292 6.49994C14.1749 6.44527 14.1104 6.40187 14.0393 6.37225C13.9683 6.34264 13.892 6.32739 13.815 6.32739C13.738 6.32739 13.6617 6.34264 13.5907 6.37225C13.5196 6.40187 13.4551 6.44527 13.4008 6.49994C13.2922 6.60924 13.2312 6.75708 13.2312 6.91119C13.2312 7.0653 13.2922 7.21315 13.4008 7.32244L15.4775 9.41661H3.58333C3.42862 9.41661 3.28025 9.47807 3.17085 9.58746C3.06146 9.69686 3 9.84523 3 9.99994C3 10.1547 3.06146 10.303 3.17085 10.4124C3.28025 10.5218 3.42862 10.5833 3.58333 10.5833H15.5125L13.4008 12.6891C13.3462 12.7433 13.3028 12.8079 13.2731 12.8789C13.2435 12.95 13.2283 13.0263 13.2283 13.1033C13.2283 13.1803 13.2435 13.2565 13.2731 13.3276C13.3028 13.3987 13.3462 13.4632 13.4008 13.5174C13.4551 13.5721 13.5196 13.6155 13.5907 13.6451C13.6617 13.6747 13.738 13.69 13.815 13.69C13.892 13.69 13.9683 13.6747 14.0393 13.6451C14.1104 13.6155 14.1749 13.5721 14.2292 13.5174L16.4867 11.2541C16.8144 10.926 16.9985 10.4812 16.9985 10.0174C16.9985 9.55369 16.8144 9.1089 16.4867 8.78077Z"
          fill={fillColor}
        />
      </svg>
    );
  };
  export const CloseIcon: React.FC<SvgProps> = ({
    isActive,
    style,
    className,
    ...rest
  }) => {
    const fillColor = isActive ? '#5a0894' : '#727A90';
  
    return (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={style}
        className={className}
        {...rest}
      >
        <path
          d="M17.9999 6.00006C17.8124 5.81259 17.5581 5.70728 17.2929 5.70728C17.0278 5.70728 16.7735 5.81259 16.5859 6.00006L11.9999 10.5861L7.41394 6.00006C7.22641 5.81259 6.9721 5.70728 6.70694 5.70728C6.44178 5.70728 6.18747 5.81259 5.99994 6.00006C5.81247 6.18759 5.70715 6.4419 5.70715 6.70706C5.70715 6.97223 5.81247 7.22653 5.99994 7.41406L10.5859 12.0001L5.99994 16.5861C5.81247 16.7736 5.70715 17.0279 5.70715 17.2931C5.70715 17.5582 5.81247 17.8125 5.99994 18.0001C6.18747 18.1875 6.44178 18.2928 6.70694 18.2928C6.9721 18.2928 7.22641 18.1875 7.41394 18.0001L11.9999 13.4141L16.5859 18.0001C16.7735 18.1875 17.0278 18.2928 17.2929 18.2928C17.5581 18.2928 17.8124 18.1875 17.9999 18.0001C18.1874 17.8125 18.2927 17.5582 18.2927 17.2931C18.2927 17.0279 18.1874 16.7736 17.9999 16.5861L13.4139 12.0001L17.9999 7.41406C18.1874 7.22653 18.2927 6.97223 18.2927 6.70706C18.2927 6.4419 18.1874 6.18759 17.9999 6.00006Z"
          fill={fillColor}
        />
      </svg>
    );
  };